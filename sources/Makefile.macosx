copier=./copier.py
blender=/Applications/blender-2.56a-beta-OSX-10.5-x86_64/blender.app/Contents/MacOS/blender

# irrlicht paths and libraries
irr_home=/Users/gianni/MyLibraries/irrlicht-1.7.2
irr_inc_dir=-I $(irr_home)/include/ -D_IRR_STATIC_LIB_ -DBASE_DIR="\"Resources/\""
irr_lib_dir=$(irr_home)/source/Irrlicht/MacOSX/build/Release/ -framework Cocoa -framework OpenGL -framework Carbon -framework IOKit  -lIrrlicht  \
						-L/usr/X11R6/lib -lXxf86vm -lXext -lX11 \
						-dylib_file \
						/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib:\
						/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib 

# bullet paths and libraries
bt_home=/Users/gianni/MyLibraries/bullet-2.77
bt_build_home=/Users/gianni/MyLibraries/bullet-build
bt_inc_dir=-I$(bt_home)/src
bt_lib_dir=-L$(bt_build_home)/src/BulletDynamics -L$(bt_build_home)/src/BulletCollision -L$(bt_build_home)/src/LinearMath
bt_libs=-lBulletDynamics -lBulletCollision -lLinearMath

# openal (and ogg vorbis) stuff
openal_inc_dir=
openal_libs=-framework OpenAL  -logg -lvorbis -lvorbisfile

log_enabled=-DLOG_ENABLED -DLOG_TO_STDOUT

appl_name=gracing

target=$(appl_name)
tgt_dir=../$(target).app
resources_dir=../resources
resources_macosx_dir=../resources.macosx
cplusplus=g++ 
ctags=ectags

defines=-DANALOG_CONTROLS -DTHREAD_USE_POSIX

include sources.mak
sources=$(common_sources) $(mac_sources)
##########################################################
tgt_appl_dir=$(tgt_dir)/Contents/MacOs
tgt_res_dir=$(tgt_dir)/Contents/Resources
tgt_cnt_dir=$(tgt_dir)/Contents
tgt_vehicles_dir=$(tgt_res_dir)/Vehicles
tgt_tracks_dir=$(tgt_res_dir)/Tracks
tgt_textures_dir=$(tgt_res_dir)/Textures
tgt_music_dir=$(tgt_res_dir)/Audio
tgt_themes_dir=$(tgt_res_dir)

src_vehicles_dir=$(resources_dir)/vehicles
src_tracks_dir=$(resources_dir)/tracks
src_fonts_dir=$(resources_dir)/gfx/fonts
src_textures_dir=$(resources_dir)/gfx/textures
src_themes_dir=$(resources_dir)/themes
src_music_dir=$(resources_dir)/audio
src_themes_dir=$(resources_dir)/themes

ccflags=$(defines) $(irr_inc_dir) $(bt_inc_dir) $(openal_inc_dir) -g -Wall $(log_enabled) -Ilua -Ilua/lua-5.1.4

				
ldflags=-L$(irr_lib_dir)  $(irr_libs) $(openal_libs) $(bt_lib_dir) $(bt_libs) lua/lua-5.1.4/src/liblua.a \
  -O3 -DNDEBUG -Wl,-search_paths_first -headerpad_max_install_names

objs=$(subst .cc,.o,$(sources))

all: genconf subdirs $(target) copy_files


subdirs: $(subdirs)


$(subdirs):
	make -C $@

$(target): $(objs) 
	@echo "Linking $(target)"
	@$(cplusplus) -o $(target) $(ldflags)  $(objs) config.o


genconf:  config.xml
  
config.xml : $(sources) uconfig.xml
	@$(copier) --cfg $(sources)
	@echo "Compiling generated config.cc"
	@$(cplusplus) -c config.cc $(ccflags)

tags:
	$(ctags) $(sources) *.h *.hh

.cc.o: 
	@echo "Compiling $<"
	@$(cplusplus) -c $< $(ccflags)

copy_files:
	@$(copier) --rm  $(tgt_dir)
	@$(copier) --mkt --tgtdir $(tgt_dir) 
	@$(copier) --cp $(target) $(tgt_appl_dir)/
	@$(copier) --cp config.xml $(tgt_res_dir)
	@$(copier) --cp $(resources_macosx_dir)/Info.plist $(tgt_cnt_dir)
	@$(copier) --cp $(resources_dir)/gfx/icon/icon.icns $(tgt_res_dir)
	@$(copier) --cp $(resources_dir)/menu.xml $(tgt_res_dir)
	@$(copier) --cp $(resources_dir)/menu.lua $(tgt_res_dir)

#@$(copier) --cp $(resources_dir)/themes/default/theme-default.zip $(tgt_res_dir)

# DEBUG COPY OF THE EXECUTABLE
	@$(copier) --cp $(target) $(tgt_dir)/

# GUI ELEMENTS
	@$(copier) --cp $(resources_dir)/roombox.zip $(tgt_res_dir)
	@$(copier) --cp $(resources_dir)/gfx/cockpit.zip $(tgt_res_dir)
	@$(copier) --cp $(resources_dir)/gfx/cockpit-2.zip $(tgt_res_dir)
	@$(copier) --cp $(resources_dir)/gfx/frame.zip $(tgt_res_dir)
	@$(copier) --cp $(resources_dir)/gfx/background.png $(tgt_res_dir);
# VEHICLES
	@$(copier) --cpv --tgtdir $(tgt_vehicles_dir) --resdir $(src_vehicles_dir)  
# TRACKS
	@$(copier) --cpt --tgtdir $(tgt_tracks_dir) --resdir $(src_tracks_dir)
# FONTS
	@$(copier) --cp $(src_fonts_dir)/droid-serif-64.xml $(tgt_res_dir)
	@$(copier) --cp $(src_fonts_dir)/droid-serif-64.png $(tgt_res_dir)
	@$(copier) --cp $(src_fonts_dir)/droid-serif-32.xml $(tgt_res_dir)
	@$(copier) --cp $(src_fonts_dir)/droid-serif-32.png $(tgt_res_dir)
	@$(copier) --cp $(src_fonts_dir)/droid-serif-24.xml $(tgt_res_dir)
	@$(copier) --cp $(src_fonts_dir)/droid-serif-24.png $(tgt_res_dir)
# TEXTURES
	@$(copier) --cp $(src_textures_dir)/clouds.png $(tgt_textures_dir)
	@$(copier) --cp $(resources_dir)/gfx/readysetgo.png $(tgt_res_dir)
	@$(copier) --cp $(resources_dir)/gfx/default-track-shot.png $(tgt_res_dir)

# MUSIC
	@$(copier) --cp $(src_music_dir)/gracing-soundtrack.ogg $(tgt_music_dir)
	@$(copier) --cps --resdir $(src_music_dir)  --tgtdir $(tgt_music_dir)

# THEMES
	@$(copier) --cph --tgtdir $(tgt_themes_dir) --resdir $(src_themes_dir)
    

clean: clean_subdirs
	rm -f *.o
	rm -f config.xml config.cc
	rm -f $(target)
	rm -fr $(tgt_dir)

clean_subdirs:
	for d in $(subdirs); do\
	  make -C $$d clean;\
	done
  

depend:
	makedepend  -- $(ccflags) -- $(sources) -f depend.mak

testb:
	$(blender) -h
  
include depend.mak

.PHONY: copy_files all clean depend tags genconf subdirs $(subdirs) clean_subdirs
